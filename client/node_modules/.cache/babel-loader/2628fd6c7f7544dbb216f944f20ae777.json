{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\skyrim\\\\client\\\\src\\\\Map.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { MapContainer, TileLayer, Marker, useMap } from \"react-leaflet\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Map() {\n  _s();\n\n  const [locations, setLocations] = useState([]);\n  const [width, setWidth] = useState(0);\n  const mapRef = /*#__PURE__*/React.createRef();\n  const map = useMap();\n\n  const fetchLocations = async () => {\n    const response = await fetch(\"http://localhost:8000/locations\");\n    const locationList = await response.json();\n    setLocations(locationList);\n  };\n\n  useEffect(() => {\n    fetchLocations();\n\n    if (mapRef.current) {\n      setWidth(mapRef.current.getBoundingClientRect().width);\n      map.invalidateSize();\n    }\n  }, [mapRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    ref: mapRef,\n    children: [width, /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [40, 0],\n      zoom: 1,\n      scrollWheelZoom: true,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        minZoom: 1,\n        maxZoom: 8,\n        url: \"https://tiles.modmapper.com/{z}/{x}/{y}.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), locations ? locations.map((location, index) => {\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          position: [location.longitude, location.latitude]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this);\n      }) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"GUESS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"riDsGs1BgeRkOObH15RXIq42el4=\", false, function () {\n  return [useMap];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","useMap","useEffect","useState","Map","locations","setLocations","width","setWidth","mapRef","createRef","map","fetchLocations","response","fetch","locationList","json","current","getBoundingClientRect","invalidateSize","location","index","longitude","latitude"],"sources":["C:/react/skyrim/client/src/Map.js"],"sourcesContent":["import React from \"react\";\r\nimport { MapContainer, TileLayer, Marker, useMap } from \"react-leaflet\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction Map() {\r\n  const [locations, setLocations] = useState([]);\r\n  const [width, setWidth] = useState(0)\r\n  const mapRef = React.createRef();\r\n  const map = useMap();\r\n\r\n  const fetchLocations = async () => {\r\n    const response = await fetch(\"http://localhost:8000/locations\");\r\n    const locationList = await response.json();\r\n\r\n    setLocations(locationList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchLocations();\r\n    if (mapRef.current) {\r\n      setWidth(mapRef.current.getBoundingClientRect().width);\r\n      map.invalidateSize();\r\n\r\n    }\r\n  }, [mapRef]);\r\n\r\n  return (\r\n    <div className=\"map\" ref={mapRef}>\r\n        {width}\r\n      <MapContainer center={[40, 0]} zoom={1} scrollWheelZoom={true}>\r\n        <TileLayer\r\n          minZoom={1}\r\n          maxZoom={8}\r\n          url=\"https://tiles.modmapper.com/{z}/{x}/{y}.jpg\"\r\n        />\r\n\r\n        {locations\r\n          ? locations.map((location, index) => {\r\n              return (\r\n                <Marker\r\n                  key={index}\r\n                  position={[location.longitude, location.latitude]}\r\n                ></Marker>\r\n              );\r\n            })\r\n          : null}\r\n      </MapContainer>\r\n\r\n      <button>GUESS</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,MAA1C,QAAwD,eAAxD;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAMM,MAAM,gBAAGZ,KAAK,CAACa,SAAN,EAAf;EACA,MAAMC,GAAG,GAAGV,MAAM,EAAlB;;EAEA,MAAMW,cAAc,GAAG,YAAY;IACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAA5B;IACA,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;IAEAV,YAAY,CAACS,YAAD,CAAZ;EACD,CALD;;EAOAb,SAAS,CAAC,MAAM;IACdU,cAAc;;IACd,IAAIH,MAAM,CAACQ,OAAX,EAAoB;MAClBT,QAAQ,CAACC,MAAM,CAACQ,OAAP,CAAeC,qBAAf,GAAuCX,KAAxC,CAAR;MACAI,GAAG,CAACQ,cAAJ;IAED;EACF,CAPQ,EAON,CAACV,MAAD,CAPM,CAAT;EASA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAqB,GAAG,EAAEA,MAA1B;IAAA,WACKF,KADL,eAEE,QAAC,YAAD;MAAc,MAAM,EAAE,CAAC,EAAD,EAAK,CAAL,CAAtB;MAA+B,IAAI,EAAE,CAArC;MAAwC,eAAe,EAAE,IAAzD;MAAA,wBACE,QAAC,SAAD;QACE,OAAO,EAAE,CADX;QAEE,OAAO,EAAE,CAFX;QAGE,GAAG,EAAC;MAHN;QAAA;QAAA;QAAA;MAAA,QADF,EAOGF,SAAS,GACNA,SAAS,CAACM,GAAV,CAAc,CAACS,QAAD,EAAWC,KAAX,KAAqB;QACjC,oBACE,QAAC,MAAD;UAEE,QAAQ,EAAE,CAACD,QAAQ,CAACE,SAAV,EAAqBF,QAAQ,CAACG,QAA9B;QAFZ,GACOF,KADP;UAAA;UAAA;UAAA;QAAA,QADF;MAMD,CAPD,CADM,GASN,IAhBN;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAqBE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QArBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD;;GA/CQjB,G;UAIKH,M;;;KAJLG,G;AAiDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}